/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as ProductosImport } from './routes/productos'
import { Route as PedidosImport } from './routes/pedidos'
import { Route as InformesImport } from './routes/informes'
import { Route as ClientesImport } from './routes/clientes'
import { Route as IndexImport } from './routes/index'
import { Route as ProductosIdImport } from './routes/productos_.$id'
import { Route as PedidosIdImport } from './routes/pedidos_.$id'
import { Route as ClientesIdImport } from './routes/clientes_.$id'

// Create/Update Routes

const ProductosRoute = ProductosImport.update({
  id: '/productos',
  path: '/productos',
  getParentRoute: () => rootRoute,
} as any)

const PedidosRoute = PedidosImport.update({
  id: '/pedidos',
  path: '/pedidos',
  getParentRoute: () => rootRoute,
} as any)

const InformesRoute = InformesImport.update({
  id: '/informes',
  path: '/informes',
  getParentRoute: () => rootRoute,
} as any)

const ClientesRoute = ClientesImport.update({
  id: '/clientes',
  path: '/clientes',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const ProductosIdRoute = ProductosIdImport.update({
  id: '/productos_/$id',
  path: '/productos/$id',
  getParentRoute: () => rootRoute,
} as any)

const PedidosIdRoute = PedidosIdImport.update({
  id: '/pedidos_/$id',
  path: '/pedidos/$id',
  getParentRoute: () => rootRoute,
} as any)

const ClientesIdRoute = ClientesIdImport.update({
  id: '/clientes_/$id',
  path: '/clientes/$id',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/clientes': {
      id: '/clientes'
      path: '/clientes'
      fullPath: '/clientes'
      preLoaderRoute: typeof ClientesImport
      parentRoute: typeof rootRoute
    }
    '/informes': {
      id: '/informes'
      path: '/informes'
      fullPath: '/informes'
      preLoaderRoute: typeof InformesImport
      parentRoute: typeof rootRoute
    }
    '/pedidos': {
      id: '/pedidos'
      path: '/pedidos'
      fullPath: '/pedidos'
      preLoaderRoute: typeof PedidosImport
      parentRoute: typeof rootRoute
    }
    '/productos': {
      id: '/productos'
      path: '/productos'
      fullPath: '/productos'
      preLoaderRoute: typeof ProductosImport
      parentRoute: typeof rootRoute
    }
    '/clientes_/$id': {
      id: '/clientes_/$id'
      path: '/clientes/$id'
      fullPath: '/clientes/$id'
      preLoaderRoute: typeof ClientesIdImport
      parentRoute: typeof rootRoute
    }
    '/pedidos_/$id': {
      id: '/pedidos_/$id'
      path: '/pedidos/$id'
      fullPath: '/pedidos/$id'
      preLoaderRoute: typeof PedidosIdImport
      parentRoute: typeof rootRoute
    }
    '/productos_/$id': {
      id: '/productos_/$id'
      path: '/productos/$id'
      fullPath: '/productos/$id'
      preLoaderRoute: typeof ProductosIdImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/clientes': typeof ClientesRoute
  '/informes': typeof InformesRoute
  '/pedidos': typeof PedidosRoute
  '/productos': typeof ProductosRoute
  '/clientes/$id': typeof ClientesIdRoute
  '/pedidos/$id': typeof PedidosIdRoute
  '/productos/$id': typeof ProductosIdRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/clientes': typeof ClientesRoute
  '/informes': typeof InformesRoute
  '/pedidos': typeof PedidosRoute
  '/productos': typeof ProductosRoute
  '/clientes/$id': typeof ClientesIdRoute
  '/pedidos/$id': typeof PedidosIdRoute
  '/productos/$id': typeof ProductosIdRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/clientes': typeof ClientesRoute
  '/informes': typeof InformesRoute
  '/pedidos': typeof PedidosRoute
  '/productos': typeof ProductosRoute
  '/clientes_/$id': typeof ClientesIdRoute
  '/pedidos_/$id': typeof PedidosIdRoute
  '/productos_/$id': typeof ProductosIdRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/clientes'
    | '/informes'
    | '/pedidos'
    | '/productos'
    | '/clientes/$id'
    | '/pedidos/$id'
    | '/productos/$id'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/clientes'
    | '/informes'
    | '/pedidos'
    | '/productos'
    | '/clientes/$id'
    | '/pedidos/$id'
    | '/productos/$id'
  id:
    | '__root__'
    | '/'
    | '/clientes'
    | '/informes'
    | '/pedidos'
    | '/productos'
    | '/clientes_/$id'
    | '/pedidos_/$id'
    | '/productos_/$id'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  ClientesRoute: typeof ClientesRoute
  InformesRoute: typeof InformesRoute
  PedidosRoute: typeof PedidosRoute
  ProductosRoute: typeof ProductosRoute
  ClientesIdRoute: typeof ClientesIdRoute
  PedidosIdRoute: typeof PedidosIdRoute
  ProductosIdRoute: typeof ProductosIdRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  ClientesRoute: ClientesRoute,
  InformesRoute: InformesRoute,
  PedidosRoute: PedidosRoute,
  ProductosRoute: ProductosRoute,
  ClientesIdRoute: ClientesIdRoute,
  PedidosIdRoute: PedidosIdRoute,
  ProductosIdRoute: ProductosIdRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/clientes",
        "/informes",
        "/pedidos",
        "/productos",
        "/clientes_/$id",
        "/pedidos_/$id",
        "/productos_/$id"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/clientes": {
      "filePath": "clientes.tsx"
    },
    "/informes": {
      "filePath": "informes.tsx"
    },
    "/pedidos": {
      "filePath": "pedidos.tsx"
    },
    "/productos": {
      "filePath": "productos.tsx"
    },
    "/clientes_/$id": {
      "filePath": "clientes_.$id.tsx"
    },
    "/pedidos_/$id": {
      "filePath": "pedidos_.$id.tsx"
    },
    "/productos_/$id": {
      "filePath": "productos_.$id.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
